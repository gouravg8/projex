import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ThemeProvider } from "../components/theme-provider";
import Navbar from "../components/layout/navbar";
import Footer from "../components/layout/footer";
import QueryProvider from "./QueryProvider";
import { ConfigProvider, type ThemeConfig } from "antd";

const geistSans = localFont({
	src: "./fonts/GeistVF.woff",
	variable: "--font-geist-sans",
	weight: "100 900",
});
const geistMono = localFont({
	src: "./fonts/GeistMonoVF.woff",
	variable: "--font-geist-mono",
	weight: "100 900",
});

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	const customTheme: ThemeConfig = {
		token: {
			colorText: "var(--foreground)", // Adjust text color for better contrast in dark mode
		},
		components: {
			Select: {
				colorTextPlaceholder: "#A9A4A4", // Set text color for placeholder text
				colorBgContainer: "#var(--background)", // Set background color for dropdown container
				colorBorder: "var(--accent)", // Border color
				optionSelectedBg: "var(--backgroundDark)",
				boxShadow: "0 0 0 1px var(--accent)", // Border color
			},
		},
	};
	return (
		<ThemeProvider>
			<html lang="en">
				<body
					className={`${geistSans.variable} ${geistMono.variable} antialiased`}
				>
					<Navbar />
					<ConfigProvider theme={customTheme}>
						<QueryProvider>{children}</QueryProvider>
					</ConfigProvider>
					<Footer />
				</body>
			</html>
		</ThemeProvider>
	);
}
